<?php
/**
 * @file
 * Implementing our hooks.
 * Demonstrate use of hook_preprecess_block API.
 * 
 **/

use Drupal\Component\Serialization\Json;

/**
 * Implementing hook_preprecess_block().
 * By Implementing this hook I will change the alt text of an image in a custom block type.
 * modify_block_preprocess_block
 **/
 function modify_block_preprocess_block( &$variables ){
    if($variables['attributes']['id'] === 'block-dogs-3'){
        $field_image_values_old = $variables['content']['#block_content']->get('field_image')->getValue()[0];
        $field_image_values_old['alt'] = 'Changed Dogs Alt';
        $variables['content']['#block_content']->get('field_image')->setValue($field_image_values_old);
    } 
 }

/**
 * Implements hook_cron().
 *
 * Implementing hook_cron() to do background processing. It gets called every time the Drupal cron runs.
 * We then decide what has to happen in response.
 * 
 * In this example I will fetch the response from an API and will update the information in a custom Block type.
 */

function modify_block_cron() {
 $blocks = \Drupal::entityTypeManager()->getStorage('block_content')->loadByProperties(array('type' => 'stock_exchange_rate_card'));
    foreach ($blocks as $block) {
      $value = $block->field_symbol->value ;
      $url = 'http://dev.markitondemand.com/MODApis/Api/v2/Quote/json?symbol='.$value.'&callback=myFunction';
      $response = \Drupal::httpClient()->get($url, array('headers' => array('Accept' => 'text/plain')));
      $data = (string) $response->getBody();
      $decoded_data = Json::decode($data);
      $last_prise = $decoded_data['LastPrice'];
      $change = $decoded_data['Change'];
      $block->set('field_change', $change);
      $block->set('field_last_price', $last_prise);
      $block->save();
    }
}